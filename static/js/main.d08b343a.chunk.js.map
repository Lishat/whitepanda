{"version":3,"sources":["components/MenuItem.js","shared/data.js","App.js","serviceWorker.js","index.js"],"names":["MenuItem","menu","this","props","cards","map","details","className","Card","CardBody","CardImg","src","Image","alt","CardTitle","class","Title","Price","CardText","Description","Component","App","href","Navbar","NavbarBrand","size","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d08b343a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Card, CardText, CardBody, CardTitle, CardImg} from 'reactstrap';\nclass MenuItem extends Component\n{\n    render()\n    {\n        const menu = this.props.cards.map((details)=>{\n            return (<div className=\"col-12 col-md-4\">\n                <Card className=\"container\">\n                    <CardBody className=\"row\">\n                        <div className=\"col-3 mx-auto\">\n                            <CardImg className=\"rounded-circle logo\" src={details.Image} alt={details.Image}></CardImg>\n                        </div>\n                        <div className=\"col-9\">\n                            <CardTitle><span class=\"mainTitle\">{details.Title}</span><br/>from &#8377;{details.Price}</CardTitle>\n                        </div>\n                        <CardText className=\"col-12\"><small className=\"csColor\">{details.Description}</small></CardText>\n                        <button className=\"ml-3 col-5 cs-btn\">Order</button>\n                    </CardBody>\n                </Card>\n            </div>);\n        });\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        ); \n    }\n}\n\nexport default MenuItem;","export const details =\n[\n    {\n        \"Title\": \"Blog / Article\",\n        \"Price\": \"500\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"Newsletter / E-mailer\",\n        \"Price\": \"1000\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"Whitepaper\",\n        \"Price\": \"2000\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"e-book\",\n        \"Price\": \"1000\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"Report / Guide\",\n        \"Price\": \"1000\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"Product Description\",\n        \"Price\": \"500\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"Website Content\",\n        \"Price\": \"1000\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"Video Script\",\n        \"Price\": \"1000\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"Company Profile / Brochure\",\n        \"Price\": \"2000\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    },\n    {\n        \"Title\": \"Press Release\",\n        \"Price\": \"2000\",\n        \"Image\": \"logo192.png\",\n        \"Description\": \"Typically 450-400 words, an e-book is perfect for your target audience ranging from prospective customers to users\",\n    }\n]","import React from 'react';\nimport { Navbar, NavbarBrand } from 'reactstrap';\nimport './App.css';\nimport MenuItem from './components/MenuItem';\nimport { details } from \"./shared/data\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"sidenav\">\n        <div className=\"topMargin\">\n          <a class=\"icon-active\" href=\"./\"><i class=\"fa fa-th-large ic-active\"></i></a>\n          <a href=\"./\"><i class=\"fa fa-search\"></i></a>\n          <a href=\"./\"><i class=\"fa fa-shopping-bag\"></i></a>\n        </div>\n      </div>\n      <div className=\"main\">\n        <Navbar className=\"bg-white fixed-top\">\n          <div className=\"container\">\n                <NavbarBrand href=\"./\"><img src=\"logo512.png\" alt=\"whitepanda\"/></NavbarBrand>\n                <span className=\"marginLeft\">\n                  <span className=\"navbar-text\">\n                    <span class=\"badge badge-danger rounded-circle csBadge\">299</span>\n                    <i class=\"fa fa-bell-o notif\"></i>\n                  </span>\n                  <span className=\"navbar-text\">\n                    <span class=\"badge badge-warning rounded-circle ml-4 user-badge\">AB</span>\n                  </span>\n                </span>\n              </div>   \n        </Navbar>\n        <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"page-header\">\n              <h2>Content Store</h2>\n              </div>\n          </div>\n          <header className=\"jumbotron\">\n              <div className=\"row\">\n                <div className=\"col-12 col-md-9\">\n                  <h6>Got bulk ideas or almost similar orders? Fill the order brief in an excel sheet</h6>\n                </div>  \n              </div>\n              <div className=\"row mt-2\">\n                <div className=\"col-12 col-md-9\">\n                  <span className=\"csColor\"><font size=\"2.9\">If you're wondering about an easy way to place orders in large numbers, we provide a way customized just for that. Download our excel sheet and fill the order brief in the prescribed format and submit. In case you need any help, <a href=\"./\" class=\"csColor\"><u>we are just a click away to assist you in placing your order.</u></a></font></span>\n                </div>\n              </div>\n              <div className=\"row mt-3\">\n                <div className=\"col-12 col-md-9\">\n                  <button className=\"jumboButton\">Order via Excel Sheet</button>\n                </div>\n              </div>\n          </header>\n        </div>\n        <MenuItem cards={details} />\n        <footer>\n          <div class=\"container\">\n            <div class=\"row mb-4\">\n              <div class=\"col-12 align-self-center\">\n                <div class=\"text-center\">\n                    <span class=\"ic-col m-4\"><i class=\"fa fa-twitter f-size\"></i></span>\n                    <span class=\"ic-col m-4\"><i class=\"fa fa-linkedin f-size\"></i></span>\n                    <span class=\"ic-col m-4\"><i class=\"fa fa-instagram f-size\"></i></span>\n                    <span class=\"ic-col m-4\"><i class=\"fa fa-facebook f-size\"></i></span>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-12 col-sm-4 offset-sm-4\">\n                <div class=\"text-center cop-col\">\n                  Copyright @ 2019 White Panda Media Pvt. Ltd.\n                </div>\n              </div>\n            </div>\n            <div class=\"row mb-2\">\n              <div class=\"col-12 col-sm-4 offset-sm-4\">\n                <div class=\"text-center cop-col\">\n                  All rights reserved.\n                </div>\n              </div>\n            </div>\n            <div class=\"row mb-4\">\n              <div class=\"col-12\">\n                <div class=\"text-center cop-col\">\n                  <a href=\"./\" class=\"m-2 cop-col\"><u>Privacy policy</u></a> | <a href=\"./\" class=\"m-2 cop-col\"><u>Terms of Service</u></a> | <a href=\"./\" class=\"m-2 cop-col\"><u>Service Agreement</u></a> | <a href=\"./\" class=\"m-2 cop-col\"><u>Contact us</u></a>\n                </div>\n              </div>\n            </div>\n        \n          </div>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}